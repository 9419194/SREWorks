<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.alibaba.tesla.appmanager.workflow.repository.mapper.WorkflowTaskDOMapper">
  <resultMap id="BaseResultMap" type="com.alibaba.tesla.appmanager.workflow.repository.domain.WorkflowTaskDO">
    <!--@mbg.generated-->
    <!--@Table am_workflow_task-->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="gmt_create" jdbcType="TIMESTAMP" property="gmtCreate" />
    <result column="gmt_modified" jdbcType="TIMESTAMP" property="gmtModified" />
    <result column="workflow_instance_id" jdbcType="BIGINT" property="workflowInstanceId" />
    <result column="app_id" jdbcType="VARCHAR" property="appId" />
    <result column="gmt_start" jdbcType="TIMESTAMP" property="gmtStart" />
    <result column="gmt_end" jdbcType="TIMESTAMP" property="gmtEnd" />
    <result column="task_type" jdbcType="VARCHAR" property="taskType" />
    <result column="task_stage" jdbcType="VARCHAR" property="taskStage" />
    <result column="task_status" jdbcType="VARCHAR" property="taskStatus" />
    <result column="deploy_app_id" jdbcType="BIGINT" property="deployAppId" />
    <result column="lock_version" jdbcType="INTEGER" property="lockVersion" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.alibaba.tesla.appmanager.workflow.repository.domain.WorkflowTaskDO">
    <!--@mbg.generated-->
    <!--@Table am_workflow_task-->
    <result column="task_properties" jdbcType="LONGVARCHAR" property="taskProperties" />
    <result column="task_error_message" jdbcType="LONGVARCHAR" property="taskErrorMessage" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--@mbg.generated-->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
        AND lock_version = #{record.lockVersion,jdbcType=INTEGER}
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, gmt_create, gmt_modified, workflow_instance_id, app_id, gmt_start, gmt_end, task_type, 
    task_stage, task_status, deploy_app_id, lock_version
  </sql>
  <sql id="Blob_Column_List">
    <!--@mbg.generated-->
    task_properties, task_error_message
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.alibaba.tesla.appmanager.workflow.repository.domain.WorkflowTaskDOExample" resultMap="ResultMapWithBLOBs">
    <!--@mbg.generated-->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from am_workflow_task
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.alibaba.tesla.appmanager.workflow.repository.domain.WorkflowTaskDOExample" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from am_workflow_task
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.alibaba.tesla.appmanager.workflow.repository.domain.WorkflowTaskDOExample">
    <!--@mbg.generated-->
    delete from am_workflow_task
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.alibaba.tesla.appmanager.workflow.repository.domain.WorkflowTaskDO" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into am_workflow_task
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="gmtCreate != null">
        gmt_create,
      </if>
      <if test="gmtModified != null">
        gmt_modified,
      </if>
      <if test="workflowInstanceId != null">
        workflow_instance_id,
      </if>
      <if test="appId != null">
        app_id,
      </if>
      <if test="gmtStart != null">
        gmt_start,
      </if>
      <if test="gmtEnd != null">
        gmt_end,
      </if>
      <if test="taskType != null">
        task_type,
      </if>
      <if test="taskStage != null">
        task_stage,
      </if>
      <if test="taskStatus != null">
        task_status,
      </if>
      <if test="deployAppId != null">
        deploy_app_id,
      </if>
      <if test="lockVersion != null">
        lock_version,
      </if>
      <if test="taskProperties != null">
        task_properties,
      </if>
      <if test="taskErrorMessage != null">
        task_error_message,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="gmtCreate != null">
        #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null">
        #{gmtModified,jdbcType=TIMESTAMP},
      </if>
      <if test="workflowInstanceId != null">
        #{workflowInstanceId,jdbcType=BIGINT},
      </if>
      <if test="appId != null">
        #{appId,jdbcType=VARCHAR},
      </if>
      <if test="gmtStart != null">
        #{gmtStart,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtEnd != null">
        #{gmtEnd,jdbcType=TIMESTAMP},
      </if>
      <if test="taskType != null">
        #{taskType,jdbcType=VARCHAR},
      </if>
      <if test="taskStage != null">
        #{taskStage,jdbcType=VARCHAR},
      </if>
      <if test="taskStatus != null">
        #{taskStatus,jdbcType=VARCHAR},
      </if>
      <if test="deployAppId != null">
        #{deployAppId,jdbcType=BIGINT},
      </if>
      <if test="lockVersion != null">
        #{lockVersion,jdbcType=INTEGER},
      </if>
      <if test="taskProperties != null">
        #{taskProperties,jdbcType=LONGVARCHAR},
      </if>
      <if test="taskErrorMessage != null">
        #{taskErrorMessage,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.alibaba.tesla.appmanager.workflow.repository.domain.WorkflowTaskDOExample" resultType="java.lang.Long">
    <!--@mbg.generated-->
    select count(*) from am_workflow_task
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update am_workflow_task
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.gmtCreate != null">
        gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.gmtModified != null">
        gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP},
      </if>
      <if test="record.workflowInstanceId != null">
        workflow_instance_id = #{record.workflowInstanceId,jdbcType=BIGINT},
      </if>
      <if test="record.appId != null">
        app_id = #{record.appId,jdbcType=VARCHAR},
      </if>
      <if test="record.gmtStart != null">
        gmt_start = #{record.gmtStart,jdbcType=TIMESTAMP},
      </if>
      <if test="record.gmtEnd != null">
        gmt_end = #{record.gmtEnd,jdbcType=TIMESTAMP},
      </if>
      <if test="record.taskType != null">
        task_type = #{record.taskType,jdbcType=VARCHAR},
      </if>
      <if test="record.taskStage != null">
        task_stage = #{record.taskStage,jdbcType=VARCHAR},
      </if>
      <if test="record.taskStatus != null">
        task_status = #{record.taskStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.deployAppId != null">
        deploy_app_id = #{record.deployAppId,jdbcType=BIGINT},
      </if>
      <if test="record.taskProperties != null">
        task_properties = #{record.taskProperties,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.taskErrorMessage != null">
        task_error_message = #{record.taskErrorMessage,jdbcType=LONGVARCHAR},
      </if>
      lock_version = lock_version + 1,
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.alibaba.tesla.appmanager.workflow.repository.domain.WorkflowTaskDO">
    <!--@mbg.generated-->
    update am_workflow_task
    <set>
      <if test="gmtCreate != null">
        gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null">
        gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
      </if>
      <if test="workflowInstanceId != null">
        workflow_instance_id = #{workflowInstanceId,jdbcType=BIGINT},
      </if>
      <if test="appId != null">
        app_id = #{appId,jdbcType=VARCHAR},
      </if>
      <if test="gmtStart != null">
        gmt_start = #{gmtStart,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtEnd != null">
        gmt_end = #{gmtEnd,jdbcType=TIMESTAMP},
      </if>
      <if test="taskType != null">
        task_type = #{taskType,jdbcType=VARCHAR},
      </if>
      <if test="taskStage != null">
        task_stage = #{taskStage,jdbcType=VARCHAR},
      </if>
      <if test="taskStatus != null">
        task_status = #{taskStatus,jdbcType=VARCHAR},
      </if>
      <if test="deployAppId != null">
        deploy_app_id = #{deployAppId,jdbcType=BIGINT},
      </if>
      <if test="taskProperties != null">
        task_properties = #{taskProperties,jdbcType=LONGVARCHAR},
      </if>
      <if test="taskErrorMessage != null">
        task_error_message = #{taskErrorMessage,jdbcType=LONGVARCHAR},
      </if>
      lock_version = lock_version + 1,
    </set>
    where id = #{id,jdbcType=BIGINT} AND lock_version = #{lockVersion,jdbcType=INTEGER}
  </update>

  <!-- 获取指定 workflowInstance 中指定 workflowTask 的下一个 PENDING 待运行任务 -->
  <select id="nextPendingTask" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from am_workflow_task
    where workflow_instance_id = #{workflowInstanceId,jdbcType=BIGINT} and id <![CDATA[ > ]]> #{workflowTaskId,jdbcType=BIGINT} and task_status = 'PENDING'
    order by id
    limit 1
  </select>
</mapper>